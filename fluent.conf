<source>
  @type forward
</source>

<match microsensor.**>
  @type copy
  <store>
    @type file
    path /var/log/fluentd/microsensor/microsensor.log
  </store>
  <store>
    @type mqtt
    host localhost
    port 1883
    <format>
      @type json
      add_newline false
    </format>
  </store>
  <store>
    @type route
    <route **>
      add_tag_prefix room.001.robo.001
      copy # For fall-through. Without copy, routing is stopped here.
    </route>
  </store>
</match>

<match camera.**>
  @type copy
  <store>
    @type file
    path /var/log/fluentd/camera/cameraLog
    time_slice_format %Y%m%d
    time_slice_wait 10s
  </store>
  <store>
    @type route
    <route **>
      add_tag_prefix room.001.robo.001
      copy # For fall-through. Without copy, routing is stopped here.
    </route>
  </store>
  <store>
    @type stdout
  </store>
</match>

<match speakText.**>
  @type copy
  <store>
    @type file
    path /var/log/fluentd/speakText/
    time_slice_format %Y%m%d
    time_slice_wait 1s
  </store>
  <store>
  @type stdout
  </store>
</match>

<match d6t44l06.**>
  @type copy
  <store>
    @type file
    path /var/log/fluentd/d6t44l06/log
    time_slice_format %Y%m%d
    time_slice_wait 10s
  </store>
  <store>
    @type route
    remove_tag_prefix sensor
    <route **>
      add_tag_prefix room.001.robo.001
      copy # For fall-through. Without copy, routing is stopped here.
    </route>
  </store>
</match>

<match room.*.robo.*.camera>
  @type copy
  <store>
    @type stdout
  </store>
  <store>
    @type rewrite_tag_filter
    <rule>
      key pos
      pattern ^4$
      tag ${tag}.center
    </rule>
    <rule>
      key pos
      pattern ^[0-35-8]$
      tag ${tag}.notcenter
    </rule>
  </store>
</match>

<match room.*.robo.*.camera.center>
  @type copy
 <store>
    @type stdout
  </store>
  <store>
    @type route
    <route **>
      add_tag_prefix forMerge
      copy
    </route>
  </store>
</match>

<match room.*.robo.*.d6t44l06.**>
  @type copy
  <store>
    @type stdout
  </store>
  <store>
    @type route
    <route **>
      add_tag_prefix forMerge
      copy
    </route>
  </store>
</match>

<match room.*.robo.*.microsensor.**>
  @type copy
  <store>
    @type route
    <route **>
      add_tag_prefix forMerge
      copy
    </route>
  </store>
  <store>
    @type stdout
  </store>
</match>

<match forMerge.room.*.robo.*.**>
  @type records_merger
  tag merged_vitaldata
  main_tag forMerge.room.001.robo.001.camera.center
  sub_tag1 forMerge.room.001.robo.001.d6t44l06
  sub_tag2 forMerge.room.001.robo.001.microsensor.data
  auto_typecast false
  <record>
    # userid              ${main["userid"]}
    age                 ${main["age"]}
    # name                ${main["name"]}
    expressionlessness  ${main["expressionlessness"]}
    joy                 ${main["joy"]}
    surprise            ${main["surprise"]}
    anger               ${main["anger"]}
    sorrow              ${main["sorrow"]}
    comprehensive       ${main["comprehensive"]}
    temp                ${sub1["mean_temp"]}
    peri_mean_temp	${sub1["peri_mean_temp"]}
    center_mean_temp	${sub1["center_mean_temp"]}
    heart               ${sub2["heart"]}
    breath              ${sub2["breath"]}
    motion              ${sub2["motion"]}
  </record>
</match>

<match merged_vitaldata>
  @type copy
  <store>
    @type record_reformer
    enable_ruby true 
    tag speakText.vital
    renew_record true
    auto_typecast true
    <record>
      text ${"こんにちは、はじめまして。今日の笑顔は"+(record['joy'].to_i+20).to_s+"点です。今日の心拍数は"+record['heart']+"。呼吸数は"+record['breath']+"です。"+((record['center_mean_temp'].to_i - record['peri_mean_temp'].to_i) > 10 ? "少しお熱があるみたい。お熱を測って貰ってね。" : "")}
    </record>
  </store>
  <store>
    @type sqlite3
    path /root/Mimamori/mimamori.db
    table vital_data
    columns     userid, name, age, expressionlessness, joy, surprise, anger, sorrow, comprehensive
    includes    userid, name, age, expressionlessness, joy, surprise, anger, sorrow, comprehensive
    # buffer_type memory
    # flush_interval 1s
    # retry_limit 1
    # retry_wait 1s
    # num_threads 1
  </store>
  <store>
    @type stdout
  </store>
</match>

<match fluent.**>
  @type file
  path /var/log/fluentd/fluentd_internal.log
</match>

<match **>
  @type file
  path /var/log/fluentd/else
  compress gz
</match>
